[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "stocks-portfolio"
version = "1.2.1"
description = "Portfolio de Stocks"
authors = [
    {name = "Fernando Figueroa", email = "me@fena.dev"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
dependencies = [
    "pandas>=2.2.3",
    "yfinance>=0.2.50",
    "python-dateutil>=2.9.0",
    "streamlit>=1.32.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "black>=24.1.1",
    "mypy>=1.8.0",
    "commitizen>=3.18.0",
    "pre-commit>=3.6.2",
    "flake8>=7.0.0",
    "isort>=5.13.2",
    "pandas-stubs>=2.2.0",
    "types-python-dateutil>=2.9.0",
]

[tool.setuptools]
packages = ["models", "classes", "utils"]

[tool.poetry]
name = "stocks-portfolio"
version = "1.2.1"
description = "Portfolio de Stocks"
authors = ["Fernando Figueroa <me@fena.dev>"]
readme = "README.md"
license = "LICENSE"
packages = [
    { include = "models" },
    { include = "classes" },
    { include = "utils" }
]

[tool.poetry.dependencies]
python = ">=3.10"
pandas = ">=2.2.3"
yfinance = ">=0.2.50"
python-dateutil = ">=2.9.0"
streamlit = ">=1.32.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=8.0.0"
black = ">=24.1.1"
mypy = ">=1.8.0"
commitizen = ">=3.18.0"
pre-commit = ">=3.6.2"
flake8 = ">=7.0.0"
isort = ">=5.13.2"
pandas-stubs = ">=2.2.0"
types-python-dateutil = ">=2.9.0"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
exclude = [
    'venv/',
    '.venv/',
    'env/',
    'build/',
    'dist/',
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["stocks"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
